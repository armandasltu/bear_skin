//
// Calculations
//

// Font themes
$f-serif: "Georgia", serif;
$f-sans: "Arial", sans-serif;

$font-body: $f-serif;
$font-headings: $f-serif;

// Defaults
body,
html {

  @media screen and (min-width: #{ $max-width + 5 + 'em'}) {
    margin: 0;
    width: 100%;
    max-width: none;
  }

}

// Font defaults
html {
  font-size: #{$base-font-size + '%'};
  font-size: #{$base + 'px'};
  font-family: $f-serif;
  font-weight: 400;

  @media screen and (min-width: #{ $max-width + 5 + 'em'}) {
    font-size: #{$base-desktop + 'px'};
    font-size: #{$base-font-size-desktop / 100 + 'rem'};
  }

}

// Line-height & margin reset
* {
  @include line-height(1);

  @include breakpoint($bp-768) {
    $leading: $leading-desktop;
    $leading-rem: $leading-rem-desktop;

    @include line-height(1);
  }

}

// Paragraph

p {
  @include margin-bottom(1);
  //@include font-size(1.1);
}

@if $paragraph-indent == true {

  p + p {
    @include margin-top(-1);
    text-indent: #{ $leading + 'px'};
    text-indent: #{ $leading-rem + 'rem'};

    .floatLeft + p,
    .floatRight + p {

      @media screen and (min-width: #{ $max-width + 5 + 'em'}) {
        $leading: $leading-desktop;
        $leading-rem: $leading-rem-desktop;

        text-indent: #{ $leading + 'px'};
        text-indent: #{ $leading-rem + 'rem'};
      }

    }

  }

  .attention-grabber + p {
    margin-top: 0;
    text-indent: 0;
  }
}

@media screen and (min-width: #{ $max-width + 5 + 'em'}) {
  $leading: $leading-desktop;
  $leading-rem: $leading-rem-desktop;

  @import 'gutenberg-mixins';

  @if $paragraph-indent == true {

    p + p,
    .floatLeft + p,
    .floatRight + p {
      @include margin-top(-1);
    }

  }

}

//
// Headings
//

// Set headings sizes, line-heights and margins
@each $heading, $properties in $headings {
  #{$heading} {
    @include font-size(nth($properties, 1));
    @include line-height(nth($properties, 2));
    @include margin-top(nth($properties, 3));
    @include margin-bottom(nth($properties, 4));
  }
}

@media screen and (min-width: #{ $max-width + 5 + 'em'}) {
  $leading: $leading-desktop;
  $leading-rem: $leading-rem-desktop;

  @import 'gutenberg-mixins';

  @each $heading, $properties in $headings {
    #{$heading} {
      @include font-size(nth($properties, 1));
      @include line-height(nth($properties, 2));
      @include margin-top(nth($properties, 3));
      @include margin-bottom(nth($properties, 4));
    }
  }

}

// Set margins between headings
h1 + h2 {
  @include margin-top(1);

  @media screen and (min-width: #{ $max-width + 5 + 'em'}) {
    $leading: $leading-desktop;
    $leading-rem: $leading-rem-desktop;

    @import 'gutenberg-mixins';

    @include margin-top(1);
  }

}

h2 + h3,
h3 + h4,
h4 + h5 {
  @include margin-top(.5);

  @media screen and (min-width: #{ $max-width + 5 + 'em'}) {
    $leading: $leading-desktop;
    $leading-rem: $leading-rem-desktop;

    @import 'gutenberg-mixins';

    @include margin-top(.5);
  }

}

h5 + h6 {
  @include margin-top(-.5);

  @media screen and (min-width: #{ $max-width + 5 + 'em'}) {
    $leading: $leading-desktop;
    $leading-rem: $leading-rem-desktop;

    @import 'gutenberg-mixins';

    @include margin-top(-.5);
  }

}

// Change headings font if a heading font is set
@if $font-headings != null {
  h1,
  h2,
  h3,
  h4 {
    font-family: $f-serif;
    font-weight: normal;

    &.grid-title {
      margin: 0;
    }
  }
}

h5, h6 {
  text-transform: uppercase;
  font-family: $f-sans;
  font-weight: 700;
}

// Lists
ul,
ol {
  li {
    margin-bottom: 0;
  }
}

small {
  @include line-height(.5);

  @media screen and (min-width: #{ $max-width + 5 + 'em'}) {
    $leading: $leading-desktop;
    $leading-rem: $leading-rem-desktop;

    @import 'gutenberg-mixins';

    @include line-height(.5);
  }
}
